# GIT
alias gco="git checkout"
alias gcm="git commit -a -m"
alias gst="git status"
alias gap='git add -p'
alias gnap='git add -N . && git add -p'
alias ga='git add'
alias gb='git branch'
alias gc='git commit -v'
alias gca='git commit -a -v'
alias gd='git diff --color-words'
alias gl='git pull'
alias glod='git log --graph --pretty="%cd %Cgreen%h%Creset%Cblue%d%Creset %Cred%an%Creset: %s" --date=short'
alias gp='git push'
alias gpr='git pull --rebase'
alias gst='git status'
alias gr='git rebase'
alias grc='git rebase --continue'
alias gri='git rebase --interactive'
alias gra='git rebase --abort'
alias gcp='git cherry-pick'

# TMUX
alias tml='tmux ls'
alias tmn='tmux new -s'
alias tma='tmux attach -t'

# DIR
alias icloud="cd ~/Library/Mobile\ Documents/com~apple~CloudDocs"
alias ndir="icloud &&  cd 50\ -\ 59\ Notes"
alias index="icloud && cd 00\ -\ 09\ Meta/ && e 00\ Index.md"
alias today="ndir && e -O 51\ Personal/daily.md 51\ Personal/reminders.md"
alias src="cd ~/Code"
alias dot="src && cd dotfiles"
alias sdpp="src && cd simple-donation/powerpack"
alias sd="src && cd simple-donation/simpledonation"
alias sdp="src && cd simple-donation/simpledonation-prospects"
alias rp="src && cd simple-donation/rock-plugin"
alias rock="src && cd Rock"
alias jnl="ndir && cd 51\ Personal && vim +'normal Go' +'r!date' journal.md"
alias cjnl="ndir && cd 51\ Personal && (echo \"\" && echo -n \"### \" && date && echo \"\") | cat - journal.md > journal.tmp && mv journal.tmp journal.md && e journal.md"
alias drive="cd ~/Library/CloudStorage/GoogleDrive-taylor@simpledonation.com/My\ Drive/Simple\ Donation\ Shared && open ."

# HEROKU
alias hc="heroku run console"
alias hl="heroku logs -t"

get_backup() {
  if [ -f ".heroku" ]; then
    app_name=$(grep "app_name" .heroku | cut -d":" -f2 | sed -e "s/^[[:space:]]*'\''//g" -e "s/'\''[[:space:]]*$//g" | tr -d '[:space:]')
    if [ -n "$app_name" ]; then
      heroku pg:backups:capture -a "$app_name"
      return
    fi
  fi

  if [ "$#" -eq 1 ]; then
    heroku pg:backups:capture -a "$1"
  else
    echo "No argument provided and no app_name found in .heroku file. Pass a Heroku application identifier as the first argument."
  fi
}

pull_db() {
  if [ -f ".heroku" ]; then
    app_name=$(grep "app_name" .heroku | cut -d":" -f2 | sed -e "s/^[[:space:]]*'\''//g" -e "s/'\''[[:space:]]*$//g" | tr -d '[:space:]')
    if [ -n "$app_name" ]; then
      heroku pg:backups:download -a "$app_name"
      return
    fi
  fi

  if [ "$#" -eq 1 ]; then
    heroku pg:backups:download -a "$1"
  else
    echo "No argument provided and no app_name found in .heroku file. Pass a Heroku application identifier as the first argument."
  fi
}

load_db() {
  # Move latest.dump.1 to latest.dump if it exists
  if [ -f "latest.dump.1" ]; then
    mv latest.dump.1 latest.dump
  fi

  if [ -f ".heroku" ]; then
    local_db=$(grep "local_database_name" .heroku | cut -d":" -f2 | sed -e "s/^[[:space:]]*'\''//g" -e "s/'\''[[:space:]]*$//g" | tr -d '[:space:]')
    if [ -n "$local_db" ]; then
      pg_restore --verbose --clean --no-acl --no-owner -h localhost -d "$local_db" latest.dump
      return
    fi
  fi

  if [ "$#" -eq 1 ]; then
    pg_restore --verbose --clean --no-acl --no-owner -h localhost -d "$1" latest.dump
  else
    echo "No argument provided and no local_database found in .heroku file. Pass the local db as the first argument."
  fi
}


# MAKE IT SO
alias mis="gp origin master && gp heroku master"

# MISC SHORTCUTS
alias be="bundle exec"
alias pca="NODE_ENV=production RAILS_ENV=production be rake assets:precompile"
alias start_redis="cd /usr/local/Cellar/redis/2.2.12/bin && ./redis-server"
alias nom='npm cache verify && rm -rf node_modules && mkdir node_modules && touch node_modules/.metadata_never_index && touch node_modules/.nosync && npm install'


# SHELL
alias ll="ls -l"
alias ..='cd ..'
alias h='history'
alias e='cursor' # values: nvim, cursor, vim, nano, etc.
